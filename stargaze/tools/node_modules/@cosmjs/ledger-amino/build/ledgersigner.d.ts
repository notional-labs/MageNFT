/// <reference types="ledgerhq__hw-transport" />
import { AccountData, AminoSignResponse, OfflineAminoSigner, StdSignDoc } from "@cosmjs/amino";
import { HdPath } from "@cosmjs/crypto";
import Transport from "@ledgerhq/hw-transport";
import { AddressAndPubkey, LedgerConnectorOptions } from "./ledgerconnector";
export declare class LedgerSigner implements OfflineAminoSigner {
    private readonly connector;
    private readonly hdPaths;
    private accounts?;
    constructor(transport: Transport, options?: LedgerConnectorOptions);
    getAccounts(): Promise<readonly AccountData[]>;
    /**
     * Shows the user's address in the device and returns an address/pubkey pair.
     *
     * The address will be shown with the native prefix of the app (e.g. cosmos, persistence, desmos)
     * and does not support the usage of other address prefixes.
     *
     * @param path The HD path to show the address for. If unset, this is the first account.
     */
    showAddress(path?: HdPath): Promise<AddressAndPubkey>;
    signAmino(signerAddress: string, signDoc: StdSignDoc): Promise<AminoSignResponse>;
}
