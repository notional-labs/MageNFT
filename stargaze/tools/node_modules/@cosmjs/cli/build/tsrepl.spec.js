"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const tsrepl_1 = require("./tsrepl");
const tsConfigPath = (0, path_1.join)(__dirname, "..", "tsconfig_repl.json");
describe("TsRepl", () => {
    it("can be constructed", () => {
        const noCode = new tsrepl_1.TsRepl(tsConfigPath, "");
        expect(noCode).toBeTruthy();
        const jsCode = new tsrepl_1.TsRepl(tsConfigPath, "const a = 'foo'");
        expect(jsCode).toBeTruthy();
        const tsCode = new tsrepl_1.TsRepl(tsConfigPath, "const a: string = 'foo'");
        expect(tsCode).toBeTruthy();
    });
    it("can be started", async () => {
        {
            const server = await new tsrepl_1.TsRepl(tsConfigPath, "").start();
            expect(server).toBeTruthy();
        }
        {
            const server = await new tsrepl_1.TsRepl(tsConfigPath, "const a = 'foo'").start();
            expect(server).toBeTruthy();
        }
        {
            const server = await new tsrepl_1.TsRepl(tsConfigPath, "const a: string = 'foo'").start();
            expect(server).toBeTruthy();
        }
    });
    it("errors when starting with broken TypeScript", async () => {
        await new tsrepl_1.TsRepl(tsConfigPath, "const a: string = 123;")
            .start()
            .then(() => fail("must not resolve"))
            .catch((e) => expect(e).toMatch(/is not assignable to type 'string'/));
        await new tsrepl_1.TsRepl(tsConfigPath, "const const const;")
            .start()
            .then(() => fail("must not resolve"))
            .catch((e) => expect(e).toMatch(/'const' is not allowed as a variable declaration name./));
    });
    it("can be started with top level await", async () => {
        {
            const server = await new tsrepl_1.TsRepl(tsConfigPath, "await 1").start();
            expect(server).toBeTruthy();
        }
        {
            const server = await new tsrepl_1.TsRepl(tsConfigPath, "await 1 + await 2").start();
            expect(server).toBeTruthy();
        }
    });
});
//# sourceMappingURL=tsrepl.spec.js.map