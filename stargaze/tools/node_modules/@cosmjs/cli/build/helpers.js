"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRecoverable = exports.executeJavaScriptAsync = exports.executeJavaScript = void 0;
const vm_1 = require("vm");
const async_1 = require("./async");
function executeJavaScript(code, filename, context) {
    const script = new vm_1.Script(code, { filename: filename });
    return script.runInContext(context);
}
exports.executeJavaScript = executeJavaScript;
async function executeJavaScriptAsync(code, filename, context) {
    const preparedCode = code.replace(/^\s*"use strict";/, "");
    // wrapped code returns a promise when executed
    const wrappedCode = (0, async_1.wrapInAsyncFunction)(preparedCode);
    const script = new vm_1.Script(wrappedCode, { filename: filename });
    const out = await script.runInContext(context);
    return out;
}
exports.executeJavaScriptAsync = executeJavaScriptAsync;
function isRecoverable(error) {
    const recoveryCodes = new Set([
        1003,
        1005,
        1109,
        1126,
        1160,
        1161,
        2355, // "A function whose declared type is neither 'void' nor 'any' must return a value."
    ]);
    return error.diagnosticCodes.every((code) => recoveryCodes.has(code));
}
exports.isRecoverable = isRecoverable;
//# sourceMappingURL=helpers.js.map