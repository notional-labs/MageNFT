"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const async_1 = require("./async");
describe("async", () => {
    it("can convert wrap code in async function", () => {
        expect((0, async_1.wrapInAsyncFunction)("")).toMatch(/\(async \(\) => {\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("  ")).toMatch(/\(async \(\) => {\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("\n")).toMatch(/\(async \(\) => {\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)(" \n ")).toMatch(/\(async \(\) => {\s+}\)\(\)/);
        // locals become globals
        expect((0, async_1.wrapInAsyncFunction)("var a = 1;")).toMatch(/\(async \(\) => {\s+a = 1;\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("const a = Date.now();")).toMatch(/\(async \(\) => {\s+a = Date.now\(\);\s+}\)\(\)/);
        // expressions
        expect((0, async_1.wrapInAsyncFunction)("1")).toMatch(/\(async \(\) => {\s+return 1;\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("1;")).toMatch(/\(async \(\) => {\s+return 1;;\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("a+b")).toMatch(/\(async \(\) => {\s+return a\+b;\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("a++")).toMatch(/\(async \(\) => {\s+return a\+\+;\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("Date.now()")).toMatch(/\(async \(\) => {\s+return Date.now\(\);\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("(1)")).toMatch(/\(async \(\) => {\s+return \(1\);\s+}\)\(\)/);
        // multiple statements
        expect((0, async_1.wrapInAsyncFunction)("var a = 1; var b = 2;")).toMatch(/\(async \(\) => {\s+a = 1;\s+b = 2;\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("var a = 1; a")).toMatch(/\(async \(\) => {\s+a = 1;\s+return a;\s+}\)\(\)/);
        // comments
        expect((0, async_1.wrapInAsyncFunction)("/* abcd */")).toMatch(/\(async \(\) => {\s+\/\* abcd \*\/\s+}\)\(\)/);
        expect((0, async_1.wrapInAsyncFunction)("// abcd")).toMatch(/\(async \(\) => {\s+\/\/ abcd\s+}\)\(\)/);
    });
});
//# sourceMappingURL=async.spec.js.map